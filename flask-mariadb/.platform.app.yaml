name: flask

type: 'python:3.9'

variables:
    env:
        FLASK_APP: run.py
        FLASK_ENV: production
        PIP_VERSION: 22.0.4
        POETRY_VERSION: 1.1.13
        POETRY_VIRTUALENVS_IN_PROJECT: true
        POETRY_VIRTUALENVS_CREATE: false

hooks:
    build: |
        # Make failed builds steps result in failed deployment.
        set -e

        # Setup pip.
        python -m pip install pip==$PIP_VERSION

        # Install Poetry.
        POETRY_INSTALLER='https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py'
        curl -sSL $POETRY_INSTALLER | POETRY_VERSION=$POETRY_VERSION python -

        # Create an environment. 
        poetry env use system

        # Check dependencies.
        poetry check

        # Install dependencies.
        poetry install
    deploy: |
        poetry run flask db init
        poetry run flask db migrate
        poetry run flask db upgrade

web:
    # upstream:
    #     socket_family: unix
    commands:
        start: |
            poetry run flask run -p $PORT
            # poetry run gunicorn -w 4 -b unix:$SOCKET "flaskr:create_app()"

relationships:
    database: "db:mysql"
    rediscache: "cache:redis"

disk: 1024

mounts:
    'migrations':
        source: local
        source_path: migrations
